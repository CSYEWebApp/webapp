name: Packer Build

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Packer Build
    runs-on: ubuntu-latest

#    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: Start and Enable MySQL
        run: |
          sudo systemctl start mysql
          sudo systemctl enable mysql
          sudo systemctl status mysql

      - name: Create User and Grant Access
        run: |
          mysql -e "CREATE USER '${{ secrets.DB_USER}}'@'${{ secrets.DB_HOST}}' IDENTIFIED BY '${{ secrets.DB_PASSWORD}}';" -uroot -p${{ secrets.DB_ROOTPASSWORD}}
          mysql -e "GRANT ALL PRIVILEGES ON *.* TO '${{ secrets.DB_USER}}'@'${{ secrets.DB_HOST}}' WITH GRANT OPTION;" -uroot -p${{ secrets.DB_ROOTPASSWORD}}
          mysql -e "FLUSH PRIVILEGES;" -uroot -p${{ secrets.DB_ROOTPASSWORD}}

      - name: gcloud action runner
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{secrets.GCP_CREDENTIALS}}'

      - name: Test
        env:
          DB_HOST: ${{ secrets.DB_HOST}}
          DB_NAME: ${{ secrets.DBTEST_NAME}}
          DB_USER: ${{ secrets.DB_USER}}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD}}
        run: |
          pwd
          ls -al
          mvn clean install -DskipTests=true         

      - name: Initialize and Validate Packer Template
        run: |
          cd ./packer/
          packer init packer.pkr.hcl
          packer validate packer.pkr.hcl

      - name: Format Packer Template
        run: |
          cd ./packer/
          packer fmt packer.pkr.hcl

      - name: Build Image with Packer
        run: |
          cd ./packer/
          packer build packer.pkr.hcl


      - name: Get Latest Image ID
        id: get_latest_image_id
        run: |
          gcloud config set project "$GOOGLE_PROJECT_ID"
          latest_image_id=$(gcloud compute images list  --sort-by=~creationTimestamp --format='value(NAME)' --limit=1)
          echo "$latest_image_id"
        env:
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}

      - name: Create New Instance Template
        run: |
          gcloud compute instance-templates create "${{ secrets.TEMPLATE_NAME }}" \
          --project="${{ secrets.GOOGLE_PROJECT_ID }}" \
          --machine-type=e2-standard-2 \
          --network-interface=network-tier=PREMIUM,subnet=vpc1-webapp-subnet \
          --metadata=startup-script="${{ secrets.INSTANCE_METADATA }}" \
          --maintenance-policy=MIGRATE \
          --provisioning-model=STANDARD \
          --service-account=web-app-sa@dev-csye-6225-415001.iam.gserviceaccount.com \
          --scopes=https://www.googleapis.com/auth/pubsub,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write \
          --region=us-central1 \
          --tags=my-vm \
          --create-disk=auto-delete=yes,boot=yes,device-name=persistent-disk-0, \
                       image=projects/"${{ secrets.GOOGLE_PROJECT_ID }}"/global/images/$latest_image_id, \
                       mode=rw,size=20,type=pd-standard \
          --no-shielded-secure-boot \
          --shielded-vtpm \
          --shielded-integrity-monitoring \
          --reservation-affinity=any

        env:
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
          TEMPLATE_NAME: ${{ secrets.TEMPLATE_NAME }}
#          MACHINE_TYPE: ${{ secrets.MACHINE_TYPE }}
#          REGION: ${{ secrets.REGION }}
          INSTANCE_METADATA: ${{ secrets.INSTANCE_METADATA }}


      - name: Set the Version Template to MIG
        run: |
          gcloud compute instance-groups managed set-instance-template \
          webapp-instance-group --template="${{ secrets.TEMPLATE_NAME }}"

      - name: Recreate the Instances
        run: |          
          gcloud compute instance-groups managed rolling-action start-update webapp-instance-group\
          --version=template="${{ secrets.TEMPLATE_NAME }}"\
          --max-surge=5 
          
          
          
