name: Packer Build

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Packer Build
    runs-on: ubuntu-latest

#    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: Start and Enable MySQL
        run: |
          sudo systemctl start mysql
          sudo systemctl enable mysql
          sudo systemctl status mysql

      - name: Create User and Grant Access
        run: |
          mysql -e "CREATE USER '${{ secrets.DB_USER}}'@'${{ secrets.DB_HOST}}' IDENTIFIED BY '${{ secrets.DB_PASSWORD}}';" -uroot -p${{ secrets.DB_ROOTPASSWORD}}
          mysql -e "GRANT ALL PRIVILEGES ON *.* TO '${{ secrets.DB_USER}}'@'${{ secrets.DB_HOST}}' WITH GRANT OPTION;" -uroot -p${{ secrets.DB_ROOTPASSWORD}}
          mysql -e "FLUSH PRIVILEGES;" -uroot -p${{ secrets.DB_ROOTPASSWORD}}

      - name: gcloud action runner
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{secrets.GCP_CREDENTIALS}}'

      - name: Test
        env:
          DB_HOST: ${{ secrets.DB_HOST}}
          DB_NAME: ${{ secrets.DBTEST_NAME}}
          DB_USER: ${{ secrets.DB_USER}}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD}}
        run: |
          pwd
          ls -al
          mvn clean install -DskipTests=true         

      - name: Initialize and Validate Packer Template
        run: |
          cd ./packer/
          packer init packer.pkr.hcl
          packer validate packer.pkr.hcl

      - name: Format Packer Template
        run: |
          cd ./packer/
          packer fmt packer.pkr.hcl

      - name: Build Image with Packer
        run: |
          cd ./packer/
          packer build packer.pkr.hcl

      - name: Get Latest Image ID
        id: get_latest_image_id
        run: |
            gcloud config set project $GOOGLE_PROJECT_ID
            latest_image_id=$(gcloud compute images list --project=$GOOGLE_PROJECT_ID --sort-by=creationTimestamp --format='value(id)' --limit=1)
            echo "::set-output name=latest_image_id::$latest_image_id"
        env:
            GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}

      - name: Create New Instance Template
        run: |
                gcloud config set project $GOOGLE_PROJECT_ID
                gcloud compute instance-templates create $TEMPLATE_NAME \
                  --machine-type $MACHINE_TYPE \
                  --image $latest_image_id \
                  --metadata $INSTANCE_METADATA \
                  --region $REGION
              env:
                GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
                TEMPLATE_NAME: ${{ secrets.TEMPLATE_NAME }}
                MACHINE_TYPE: ${{ secrets.MACHINE_TYPE }}
                REGION: ${{ secrets.REGION }}
                INSTANCE_METADATA: ${{ secrets.INSTANCE_METADATA }}